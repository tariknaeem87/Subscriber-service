<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<packaging>${packaging.type}</packaging>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.dell.tsp.subscriber.tsp-subscriber-service</groupId>
	<artifactId>subscriber-service</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>subscriber-service</name>
	<description></description>

	<properties>
		<ms-commons.version>0.0.1</ms-commons.version>
		<java.version>1.8</java.version>
		<code-coverage.include.package>com.dell.tsp.subscriber.*</code-coverage.include.package>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<build.number>${project.version}-${maven.build.timestamp}</build.number>
		<code-coverage.include.package>com.demo.*</code-coverage.include.package>
		<packaging.type>jar</packaging.type>
		<resource.delimiter>@</resource.delimiter>
		<spring.config.location>classpath:config/deployment.local.yml</spring.config.location>
		<aspectj-maven-plugin.version>1.9</aspectj-maven-plugin.version>
		<docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
		<git-commit-id-plugin.version>2.2.2</git-commit-id-plugin.version>
		<jacoco.version>0.7.9</jacoco.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<spring-boot.version>2.5.12</spring-boot.version>
		<spring-boot-maven-plugin.version>2.1.1.RELEASE</spring-boot-maven-plugin.version>
		<docker.registry.local>localhost:5000</docker.registry.local>
		<docker.prefix>demo</docker.prefix>
		<rest.assured.io.version>3.1.1</rest.assured.io.version>
		<sl4jVersion>1.7.25</sl4jVersion>
		<docker.registry.url>http://localhost:5000</docker.registry.url>
		<nexus.repo.url>http://ci-server.com:8082</nexus.repo.url>
		<spring-cloud-services.version>2.1.3.RELEASE</spring-cloud-services.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
	</properties>



	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>maven-releases</name>
			<url>${nexus.repo.url}/repository/maven-releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>maven-snapshots</name>
			<url>${nexus.repo.url}/repository/maven-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>nexus</id>
			<name>maven-group</name>
			<url>${nexus.repo.url}/repository/maven-group/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.demo</groupId>
				<artifactId>ms-commons</artifactId>
				<version>${ms-commons.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>${spring-cloud-services.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency> 
			
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>com.demo</groupId>
			<artifactId>ms-commons</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.6</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<version>${rest.assured.io.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${sl4jVersion}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.1.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>5.2</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.21</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.23</version>
		</dependency>

		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>java-hamcrest</artifactId>
			<version>2.0.0.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.zohhak</groupId>
			<artifactId>zohhak</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.11</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-security</artifactId>
		    <version>2.1.4.RELEASE</version>
		</dependency>
		<dependency>
    		<groupId>org.springframework.boot</groupId>
   			<artifactId>spring-boot-starter-amqp</artifactId>
    		<version>2.1.2.RELEASE</version>
		</dependency>
			<dependency>
			<groupId>io.pivotal.spring.cloud</groupId>
			<artifactId>spring-cloud-services-starter-config-client</artifactId>
		</dependency> 
  
		<dependency>
			<groupId>io.pivotal.spring.cloud</groupId>
			<artifactId>spring-cloud-services-starter-service-registry</artifactId>
		</dependency>
		<dependency>
    		<groupId>com.google.code.gson</groupId>
    		<artifactId>gson</artifactId>
    		<version>2.8.2</version>
		</dependency> 
	</dependencies>

	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>build-info.yml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>build-info.yml</exclude>
				</excludes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
					<executions>
						<execution>
							<id>create-temp-jacoco-file</id>
							<phase>test-compile</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo
										message="Creating temp jacoco exec file: ${project.build.directory}${file.separator}jacoco.exec" />
									<touch
										file="${project.build.directory}${file.separator}jacoco.exec" />
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<includes>
									<include>${code-coverage.include.package}</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
						<prefix>git</prefix>
						<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
						<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
						<verbose>false</verbose>
						<generateGitPropertiesFile>false</generateGitPropertiesFile>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/build-info.yml
						</generateGitPropertiesFilename>
						<format>properties</format>
						<skipPoms>true</skipPoms>
						<injectAllReactorProjects>false</injectAllReactorProjects>
						<failOnNoGitDirectory>false</failOnNoGitDirectory>
						<failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
						<skip>false</skip>
						<runOnlyOnce>false</runOnlyOnce>
						<excludeProperties>
						</excludeProperties>
						<includeOnlyProperties>
						</includeOnlyProperties>
						<useNativeGit>false</useNativeGit>
						<abbrevLength>7</abbrevLength>
						<commitIdGenerationMode>flat</commitIdGenerationMode>
						<gitDescribe>
							<skip>false</skip>
							<always>false</always>
							<abbrev>7</abbrev>
							<dirty>-dirty</dirty>
							<match>*</match>
							<forceLongFormat>false</forceLongFormat>
						</gitDescribe>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<classifier>exec</classifier>
						<addResources>true</addResources>
						<folders>
							<folder>src/main/resources/config</folder>
						</folders>
						<arguments>
							<argument>--spring.config.location=${spring.config.location}</argument>
						</arguments>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<proc>none</proc>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<mainClass>${spring-boot-maven-plugin.mainClass}</mainClass>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<archive>
									<manifest>
										<mainClass>${main.class}</mainClass>
									</manifest>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
							<include>**/*IT.java</include>
						</includes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<registryUrl>${docker.registry.url}</registryUrl>
						<!-- <useConfigFile>true</useConfigFile> -->
						<!-- <imageName>${docker.prefix}/${project.artifactId}:${git.commit.id.abbrev}</imageName> -->
						<imageName>${docker.prefix}/${project.artifactId}</imageName>
						<forceTags>true</forceTags>
						<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
						<skipDockerBuild>false</skipDockerBuild>
						<resources>
							<resource>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}*.jar</include>
							</resource>
							<resource>
								<targetPath>/config</targetPath>
								<directory>${project.basedir}/src/main/resources/config</directory>
							</resource>
						</resources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>${aspectj-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>weave-classes</id>
							<goals>
								<goal>compile</goal>
								<goal>test-compile</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<verbose>false</verbose>
						<outxml>false</outxml>
						<showWeaveInfo>true</showWeaveInfo>
						<complianceLevel>${java.version}</complianceLevel>
						<warn>none</warn>
						<encoding>UTF-8</encoding>
						<sources />
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-java</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireJavaVersion>
										<version>1.8.0</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<tagBase>${nexus.repo.url}/repository/maven-releases</tagBase>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>build</id>
			<activation>
				<file>
					<exists>${basedir}/src/main/java</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
					</plugin>
					<!-- <plugin> <groupId>com.spotify</groupId> <artifactId>docker-maven-plugin</artifactId> 
						</plugin> -->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>